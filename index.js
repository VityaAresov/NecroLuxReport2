// index.js
import 'dotenv/config';
import express from 'express';
import TelegramBot from 'node-telegram-bot-api';
import Airtable from 'airtable';
import botLogic from './bot-logic.js'; // –≤–∞—à —Ñ–∞–π–ª —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤

// 1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Airtable
Airtable.configure({ apiKey: process.env.AIRTABLE_TOKEN });
const base = Airtable.base(process.env.AIRTABLE_BASE_ID);

// 2. –°–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ (webhook mode)
const token = process.env.TELEGRAM_TOKEN;
const bot = new TelegramBot(token);
const WEBHOOK_URL = process.env.WEBHOOK_URL; 
// –Ω–∞–ø—Ä–∏–º–µ—Ä: https://<–≤–∞—à‚Äë—Å–µ—Ä–≤–∏—Å>.onrender.com
bot.setWebHook(`${WEBHOOK_URL}/webhook`);

// 3. –ü–æ–¥–∫–ª—é—á–∏—Ç—å –≤–∞—à—É –ª–æ–≥–∏–∫—É
//    –í bot-logic.js —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ default function(bot, base){ /* reg handlers */ }
botLogic(bot, base);

// 4. –ó–∞–ø—É—Å—Ç–∏—Ç—å Express
const app = express();
// Telegram –ø—Ä–∏—Å—ã–ª–∞–µ—Ç JSON
app.use(express.json());

// Health‚Äëcheck
app.get('/', (req, res) => {
  res.send('OK');
});

// Webhook endpoint
app.post('/webhook', async (req, res) => {
  try {
    await bot.processUpdate(req.body);
    res.status(200).send('OK');
  } catch (err) {
    console.error('Error handling update:', err);
    res.sendStatus(500);
  }
});

// –°—Ç–∞—Ä—Ç
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`üöÄ Server listening on port ${PORT}`);
});
